{"mappings":"ACGA,SAAS,gBAAgB,CAAC,mBAAoB,MAC5C,ACJK,WACL,IAAM,EAAa,SAAS,cAAc,CAAC,eACrC,EAAa,SAAS,aAAa,CAAC,gBAE1C,GAAI,CAAC,GAAc,CAAC,EAAY,OAEhC,IAAM,EAAW,EAAW,gBAAgB,CAAC,KAEvC,EAAc,AAAC,IACnB,EAAW,YAAY,CAAC,gBAAiB,OAAO,IAChD,EAAW,YAAY,CACrB,aACA,EAAW,aAAe,YAE9B,EASA,EAAW,gBAAgB,CAAC,QAPT,KACjB,IAAM,EAAS,EAAW,SAAS,CAAC,MAAM,CAAC,UAC3C,EAAY,GACZ,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,EAAS,SAAW,GACnD,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAa,EAC9C,GAIA,EAAS,OAAO,CAAC,AAAC,IAChB,EAAK,gBAAgB,CAAC,QAAS,KACzB,EAAW,SAAS,CAAC,QAAQ,CAAC,YAChC,EAAW,SAAS,CAAC,MAAM,CAAC,UAC5B,EAAY,CAAA,GACZ,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,GAC/B,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAEnC,EACF,GAEA,SAAS,gBAAgB,CAAC,UAAW,AAAC,IACtB,WAAV,EAAE,GAAG,EAAiB,EAAW,SAAS,CAAC,QAAQ,CAAC,YACtD,EAAW,SAAS,CAAC,MAAM,CAAC,UAC5B,EAAY,CAAA,GACZ,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,GAC/B,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAEnC,EACF,IDvCE,AELK,WACL,IAAM,EAAY,SAAS,cAAc,CAAC,QAC1C,GAAI,CAAC,EAAW,OAEhB,IAAM,EAAQ,IAAI,KAClB,EAAM,QAAQ,CAAC,EAAG,EAAG,EAAG,GASxB,IAAM,EAAW,IAAI,KAAK,GAC1B,EAAS,OAAO,CAAC,EAAS,OAAO,GAAK,GACtC,EAAU,GAAG,CAAG,AATE,CAAA,AAAC,IACjB,IAAM,EAAI,EAAE,WAAW,GACjB,EAAI,OAAO,EAAE,QAAQ,GAAK,GAAG,QAAQ,CAAC,EAAG,KACzC,EAAM,OAAO,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAG,KAC5C,MAAO,CAAA,EAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAA,CAAK,AAC3B,CAAA,EAI0B,GAE1B,IAAM,EAAe,KACnB,GAAI,CAAC,EAAU,KAAK,CAAE,YACpB,EAAU,iBAAiB,CAAC,IAG9B,IAAM,EAAW,IAAI,KAAK,CAAA,EAAG,EAAU,KAAK,CAAC,SAAS,CAAC,EACvD,EAAS,QAAQ,CAAC,EAAG,EAAG,EAAG,GAEvB,GAAY,EACd,EAAU,iBAAiB,CAAC,gCACnB,AAAsB,IAAtB,EAAS,MAAM,GAExB,EAAU,iBAAiB,CACzB,yDAGF,EAAU,iBAAiB,CAAC,IAE9B,EAAU,cAAc,EAC1B,EAEA,EAAU,gBAAgB,CAAC,SAAU,GACrC,EAAU,gBAAgB,CAAC,QAAS,GAEpC,IAAM,EAAO,EAAU,OAAO,CAAC,OAC3B,CAAA,GACF,EAAK,gBAAgB,CAAC,SAAU,AAAC,IAC/B,IACI,AAAC,EAAK,aAAa,IACrB,EAAE,cAAc,EAEpB,EAEJ,GF7CA","sources":["<anon>","src/index.js","src/modules/nav.js","src/modules/bookingDate.js"],"sourcesContent":["function $b091734e3ab1db44$export$240cd81d1fa164a8() {\n    const menuButton = document.getElementById(\"menu-button\");\n    const navigation = document.querySelector(\".header__nav\");\n    if (!menuButton || !navigation) return;\n    const navLinks = navigation.querySelectorAll(\"a\");\n    const setExpanded = (expanded)=>{\n        menuButton.setAttribute(\"aria-expanded\", String(expanded));\n        menuButton.setAttribute(\"aria-label\", expanded ? \"Close menu\" : \"Open menu\");\n    };\n    const toggleMenu = ()=>{\n        const isOpen = navigation.classList.toggle(\"active\");\n        setExpanded(isOpen);\n        document.body.style.overflow = isOpen ? \"hidden\" : \"\";\n        document.body.classList.toggle(\"menu-open\", isOpen);\n    };\n    menuButton.addEventListener(\"click\", toggleMenu);\n    navLinks.forEach((link)=>{\n        link.addEventListener(\"click\", ()=>{\n            if (navigation.classList.contains(\"active\")) {\n                navigation.classList.remove(\"active\");\n                setExpanded(false);\n                document.body.style.overflow = \"\";\n                document.body.classList.remove(\"menu-open\");\n            }\n        });\n    });\n    document.addEventListener(\"keydown\", (e)=>{\n        if (e.key === \"Escape\" && navigation.classList.contains(\"active\")) {\n            navigation.classList.remove(\"active\");\n            setExpanded(false);\n            document.body.style.overflow = \"\";\n            document.body.classList.remove(\"menu-open\");\n        }\n    });\n}\n\n\nfunction $101d01231d693de8$export$76762345b6aa7646() {\n    const dateInput = document.getElementById(\"date\");\n    if (!dateInput) return;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const toISODate = (d)=>{\n        const y = d.getFullYear();\n        const m = String(d.getMonth() + 1).padStart(2, \"0\");\n        const day = String(d.getDate()).padStart(2, \"0\");\n        return `${y}-${m}-${day}`;\n    };\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    dateInput.min = toISODate(tomorrow);\n    const validateDate = ()=>{\n        if (!dateInput.value) {\n            dateInput.setCustomValidity(\"\");\n            return;\n        }\n        const selected = new Date(`${dateInput.value}T00:00:00`);\n        selected.setHours(0, 0, 0, 0);\n        if (selected <= today) dateInput.setCustomValidity(\"Please select a future date.\");\n        else if (selected.getDay() === 1) // Monday\n        dateInput.setCustomValidity(\"We are closed on Mondays. Please choose another date.\");\n        else dateInput.setCustomValidity(\"\");\n        dateInput.reportValidity();\n    };\n    dateInput.addEventListener(\"change\", validateDate);\n    dateInput.addEventListener(\"input\", validateDate);\n    const form = dateInput.closest(\"form\");\n    if (form) form.addEventListener(\"submit\", (e)=>{\n        validateDate();\n        if (!form.checkValidity()) e.preventDefault();\n    });\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    (0, $b091734e3ab1db44$export$240cd81d1fa164a8)();\n    (0, $101d01231d693de8$export$76762345b6aa7646)();\n});\n\n\n//# sourceMappingURL=black-olives.bdc17e6f.js.map\n","import { initNav } from \"./modules/nav.js\";\nimport { initBookingDateValidation } from \"./modules/bookingDate.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  initNav();\n  initBookingDateValidation();\n});\n","export function initNav() {\n  const menuButton = document.getElementById(\"menu-button\");\n  const navigation = document.querySelector(\".header__nav\");\n\n  if (!menuButton || !navigation) return;\n\n  const navLinks = navigation.querySelectorAll(\"a\");\n\n  const setExpanded = (expanded) => {\n    menuButton.setAttribute(\"aria-expanded\", String(expanded));\n    menuButton.setAttribute(\n      \"aria-label\",\n      expanded ? \"Close menu\" : \"Open menu\"\n    );\n  };\n\n  const toggleMenu = () => {\n    const isOpen = navigation.classList.toggle(\"active\");\n    setExpanded(isOpen);\n    document.body.style.overflow = isOpen ? \"hidden\" : \"\";\n    document.body.classList.toggle(\"menu-open\", isOpen);\n  };\n\n  menuButton.addEventListener(\"click\", toggleMenu);\n\n  navLinks.forEach((link) => {\n    link.addEventListener(\"click\", () => {\n      if (navigation.classList.contains(\"active\")) {\n        navigation.classList.remove(\"active\");\n        setExpanded(false);\n        document.body.style.overflow = \"\";\n        document.body.classList.remove(\"menu-open\");\n      }\n    });\n  });\n\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"Escape\" && navigation.classList.contains(\"active\")) {\n      navigation.classList.remove(\"active\");\n      setExpanded(false);\n      document.body.style.overflow = \"\";\n      document.body.classList.remove(\"menu-open\");\n    }\n  });\n}\n","export function initBookingDateValidation() {\n  const dateInput = document.getElementById(\"date\");\n  if (!dateInput) return;\n\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n\n  const toISODate = (d) => {\n    const y = d.getFullYear();\n    const m = String(d.getMonth() + 1).padStart(2, \"0\");\n    const day = String(d.getDate()).padStart(2, \"0\");\n    return `${y}-${m}-${day}`;\n  };\n\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  dateInput.min = toISODate(tomorrow);\n\n  const validateDate = () => {\n    if (!dateInput.value) {\n      dateInput.setCustomValidity(\"\");\n      return;\n    }\n    const selected = new Date(`${dateInput.value}T00:00:00`);\n    selected.setHours(0, 0, 0, 0);\n\n    if (selected <= today) {\n      dateInput.setCustomValidity(\"Please select a future date.\");\n    } else if (selected.getDay() === 1) {\n      // Monday\n      dateInput.setCustomValidity(\n        \"We are closed on Mondays. Please choose another date.\"\n      );\n    } else {\n      dateInput.setCustomValidity(\"\");\n    }\n    dateInput.reportValidity();\n  };\n\n  dateInput.addEventListener(\"change\", validateDate);\n  dateInput.addEventListener(\"input\", validateDate);\n\n  const form = dateInput.closest(\"form\");\n  if (form) {\n    form.addEventListener(\"submit\", (e) => {\n      validateDate();\n      if (!form.checkValidity()) {\n        e.preventDefault();\n      }\n    });\n  }\n}\n"],"names":["document","addEventListener","menuButton","getElementById","navigation","querySelector","navLinks","querySelectorAll","setExpanded","expanded","setAttribute","String","isOpen","classList","toggle","body","style","overflow","forEach","link","contains","remove","e","key","dateInput","today","Date","setHours","tomorrow","setDate","getDate","min","toISODate","d","y","getFullYear","m","getMonth","padStart","day","validateDate","value","setCustomValidity","selected","getDay","reportValidity","form","closest","checkValidity","preventDefault"],"version":3,"file":"black-olives.bdc17e6f.js.map"}